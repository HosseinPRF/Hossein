کاملاً واضح و مرحله‌به‌مرحله میگم چیکار کنی که اون کدهایی که الان روی یه فولدر در سیستمت داری، بری تو فضای ابری (مثلاً GitHub) ذخیره بشن و بتونی بعداً تو سیستم دیگه راحت بازشون کنی و تغییراتت هم خودکار هماهنگ بشه.

---

# مراحل ذخیره و همگام‌سازی کد روی GitHub (فضای ابری) و استفاده روی سیستم‌های مختلف

---

## مرحله ۱: ساخت مخزن (Repository) جدید روی GitHub

1. وارد سایت [github.com](https://github.com) شو و وارد حساب کاربری‌ات شو (یا بساز).
2. روی دکمه **New** یا **New repository** کلیک کن.
3. یک نام برای مخزن انتخاب کن (مثلاً اسم پروژه‌ات).
4. گزینه **Initialize this repository with a README** را تیک نزن (چون ما می‌خواهیم مخزن خالی باشه).
5. روی **Create repository** کلیک کن.

---

## مرحله ۲: آماده‌سازی فولدر کد محلی برای اتصال به Git و GitHub

1. **وارد فولدر پروژه بشو** (جایی که کدها رو نوشتی).
2. ترمینال (Git Bash یا ترمینال VS Code) رو باز کن و دستور زیر رو اجرا کن تا فولدر تبدیل به مخزن Git بشه:

```bash
git init
```

3. تمام فایل‌ها رو به Git معرفی کن:

```bash
git add .
```

4. اولین کامیت رو بساز:

```bash
git commit -m "اولین کامیت پروژه"
```

---

## مرحله ۳: اتصال مخزن محلی به مخزن GitHub

1. لینک SSH مخزن GitHub که در مرحله ۱ ساخته‌ای رو بگیر:

   * وارد صفحه مخزن در GitHub شو.
   * دکمه سبز رنگ **Code** را بزن.
   * تب **SSH** را انتخاب کن و لینک را کپی کن (شبیه `git@github.com:username/repository.git`).

2. دستور زیر رو در ترمینال اجرا کن تا مخزن محلی به مخزن ریموت GitHub وصل بشه:

```bash
git remote add origin git@github.com:username/repository.git
```

(جای `username` و `repository` را با مقادیر خودت جایگزین کن)

---

## مرحله ۴: ارسال اولین نسخه به GitHub (push)

```bash
git push -u origin main
```

* اگر ارور شاخه `main` داشتی، احتمالا شاخه‌ات `master` هست، پس اینو بزن:

```bash
git push -u origin master
```

---

## مرحله ۵: استفاده از کد روی سیستم دوم

1. روی سیستم دوم، مخزن رو کلون کن:

```bash
git clone git@github.com:username/repository.git
```

2. هر بار که می‌خوای شروع کنی به کار، تغییرات جدید رو بگیر:

```bash
git pull origin main
```

3. بعد از تغییرات جدید، کامیت و پوش کن:

```bash
git add .
git commit -m "پیام تغییرات"
git push origin main
```

* اگر ارور شاخه `main` داشتی، احتمالا شاخه‌ات `master` هست، پس اینو بزن:

```bash
git push -u origin master
```

---

## نکات مهم

* حتماً SSH Key داشته باشی و روی هر دو سیستم کلید SSH تنظیم شده باشه (برای دسترسی بدون رمز).
* هر بار قبل از شروع کار در سیستم دوم، `git pull` بزنی تا تغییرات دیگران رو دریافت کنی.
* هر بار بعد از اتمام کار در هر سیستم، تغییراتت رو `git push` کنی تا روی GitHub ذخیره بشه.

---

اگر می‌خوای من برات همه مراحل رو با دستورات دقیق و تصاویر توضیح بدم یا در VS Code همراهت باشم، فقط بگو.


فرایند کامل اضافه کردن فایل جدید:
bash
Copy
git add filename.ext      # فایل یا فایل‌ها رو معرفی می‌کنی به Git  
git commit -m "توضیح تغییرات"   # تغییرات رو ثبت می‌کنی  
git push origin master    # تغییرات ثبت شده رو به GitHub ارسال می‌کنی  
یا برای همه فایل‌ها:

bash
Copy
git add .
git commit -m "افزودن فایل‌های جدید"
git push origin master
اگر فقط git push بزنی بدون add و commit، هیچ تغییری به مخزن آنلاین ارسال نمیشه چون Git تغییرات جدید رو نمی‌شناسه.

